# Python Automation testing and deploy example

# This template allows you to push your robot from your GitHub repository to your configured
# Control Room. This configuration will run an automation's unit tests via `rcc` as part of
# any pull request and deploy the project upon merge/commit to the Control Room depending 
# on the configured environment.

# Prerequisites:
# You must configure the following variables within your GitHub repository settings:
# * `CR_ACCESS_CREDENTIALS`: This is the access token for your Control Room account and should be set
#   as a repository secret. You can find this token in the Control Room UI under the user profile.
# * `CR_ENDPOINT_URL`: This is the API endpoint per the Control Room API helper for uploading a robot, it
#   should be set as a repository variable.
# * `ROBOT_ID`: This is the ID of the robot within the Control Room Robot UI. You should set this for
#   each environment you have configured.
# * `WORKSPACE_ID`: This is the workspace ID associated with the environment. You should set this for
#   each environment you have configured.
# The `ROBOT_ID` and `WORKSPACE_ID` should be configured at the deployment level so each pipeline deploys
# to the correct Workspace environment.
#
# The robot in control room must be configured as a `robot file` type of robot.
# For more information on creating/getting these values in control room, check out https://robocorp.com/docs/rcc/workflow
name: Deploy to Production Robocorp Control Room

on:
  push:
    branches:
      - main

jobs:
  call-robocorp-deploy:
    uses: ./.github/workflows/robocorp-deploy.yml
    with:
      environment: production 
    secrets: inherit

